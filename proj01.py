# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MUKLJeZZFtXRC0bVLyd9x1ZnHx9cj5Ei
"""

# Assuming the cipherText file is in the same folder as your program
file_path = "/content/sample_data/cipherText.txt"  # Update the file name accordingly

words = ""
with open(file_path, "r") as file:
    for line in file:
        print(line.strip())  # Print the next file line
        words += line + " "

print("All words in the file:", words)

def decrypt_caesar_cipher(file_path):
    # Step 1: Read the cipher-text file
    with open(file_path, "r") as file:
        cipher_text = file.read()

    # Step 2: Get a count of each character in the entire cipher-text (ignore spaces)
    char_count = {}
    for char in cipher_text:
        if char != ' ':
            char_count[char] = char_count.get(char, 0) + 1

    # Step 3: Find the most common character
    most_common_char = max(char_count, key=char_count.get)

    # Step 4: Find the shift from 'E' to the most common character
    shift = (ord(most_common_char) - ord('E')) % 26

    # Step 5: Check that the shift also works for the next most common character

    # Step 6: Using the shift, decode each character of the cipher-text and print
    decoded_text = ""
    for char in cipher_text:
        if char != ' ':
            decoded_char = chr((ord(char) - shift - ord('A')) % 26 + ord('A'))
            decoded_text += decoded_char
        else:
            decoded_text += ' '

    print("Decrypted Text:", decoded_text)

# Example usage
#file_path = "/content/sample_data/cipherText.txt"
decrypt_caesar_cipher(file_path)

# Example usage of ord() and chr()
char = 'a'
ascii_value = ord(char)
print(f"The ASCII value of {char} is {ascii_value}")

# Using chr() to convert ASCII value back to character
new_char = chr(ascii_value)
print(f"The character corresponding to {ascii_value} is {new_char}")

# Assuming shift is calculated as described in your instructions
shift = 3  # Replace with the actual shift value

# Encryption
plain_text_char = (ord('a') - shift) % 26
encrypted_char = chr(plain_text_char)

# Decryption
cipher_text_char = (ord(encrypted_char) + shift) % 26
decrypted_char = chr(cipher_text_char)

print(f"Original character: a, Encrypted character: {encrypted_char}, Decrypted character: {decrypted_char}")